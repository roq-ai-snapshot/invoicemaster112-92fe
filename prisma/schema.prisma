generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contract {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organisation_id String       @db.Uuid
  client_id       String       @db.Uuid
  start_date      DateTime     @db.Timestamp(6)
  end_date        DateTime     @db.Timestamp(6)
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  user            user         @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model financial_report {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organisation_id String       @db.Uuid
  report_date     DateTime     @db.Timestamp(6)
  total_invoiced  Int
  total_received  Int
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model invoice {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organisation_id String       @db.Uuid
  client_id       String       @db.Uuid
  status          String       @db.VarChar(50)
  amount          Int
  due_date        DateTime     @db.Timestamp(6)
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  user            user         @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  payment         payment[]
}

model organisation {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  user_id          String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  contract         contract[]
  financial_report financial_report[]
  invoice          invoice[]
  user             user               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model payment {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  invoice_id   String   @db.Uuid
  amount       Int
  payment_date DateTime @db.Timestamp(6)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  invoice      invoice  @relation(fields: [invoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  contract     contract[]
  invoice      invoice[]
  organisation organisation[]
}
